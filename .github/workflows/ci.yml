name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, gek ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Godot
      run: |
        wget -q https://downloads.tuxfamily.org/godotengine/4.4/Godot_v4.4-stable_linux.x86_64.zip
        unzip Godot_v4.4-stable_linux.x86_64.zip
        sudo mv Godot_v4.4-stable_linux.x86_64 /usr/local/bin/godot
        sudo chmod +x /usr/local/bin/godot
        
    - name: Run Unit Tests
      run: |
        godot --headless --script "Unit Testing/run_tests.gd" --quit
      env:
        GODOT_HEADLESS: 1
        
    - name: Run GdUnit4 Tests
      run: |
        godot --headless --script "res://addons/gdUnit4/bin/GdUnitRunner.gd" --quit
      env:
        GODOT_HEADLESS: 1

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Godot
      run: |
        wget -q https://downloads.tuxfamily.org/godotengine/4.4/Godot_v4.4-stable_linux.x86_64.zip
        unzip Godot_v4.4-stable_linux.x86_64.zip
        sudo mv Godot_v4.4-stable_linux.x86_64 /usr/local/bin/godot
        sudo chmod +x /usr/local/bin/godot
        
    - name: Export Linux
      run: |
        mkdir -p build/linux
        godot --headless --export-debug "Linux/X11" build/linux/aarpg.x86_64
        
    - name: Upload Linux Build
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: build/linux/

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Godot
      run: |
        Invoke-WebRequest -Uri "https://downloads.tuxfamily.org/godotengine/4.4/Godot_v4.4-stable_win64.exe.zip" -OutFile "godot.zip"
        Expand-Archive -Path "godot.zip" -DestinationPath "godot"
        $env:PATH += ";$PWD/godot"
        echo "$PWD/godot" >> $env:GITHUB_PATH
        
    - name: Export Windows
      run: |
        mkdir -p build/windows
        godot --headless --export-debug "Windows Desktop" build/windows/aarpg.exe
        
    - name: Upload Windows Build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows/

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Godot
      run: |
        curl -L -o godot.zip https://downloads.tuxfamily.org/godotengine/4.4/Godot_v4.4-stable_macos.universal.zip
        unzip godot.zip
        sudo mv Godot.app/Contents/MacOS/Godot /usr/local/bin/godot
        sudo chmod +x /usr/local/bin/godot
        
    - name: Export macOS
      run: |
        mkdir -p build/macos
        godot --headless --export-debug "macOS" build/macos/aarpg.app
        
    - name: Upload macOS Build
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/macos/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, build-linux, build-windows, build-macos]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: |
          linux-build/*
          windows-build/*
          macos-build/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}